{"version":3,"sources":["components/KyugyoPost.tsx","components/KyugyoList.tsx","config.tsx","components/TopPageContainer.tsx","history.ts","components/KyugyoPage.tsx","components/About.tsx","components/InputKyugyo.tsx","components/PostPageContainer.tsx","components/HeaderBar.tsx","App.tsx","index.tsx"],"names":["KyugyoPost","props","kyugyo","link","id","to","className","storeName","address","hpUrl","updatedAt","isClosed","KyugyoList","kyugyos","setKyugyos","map","k","i","key","apiUrl","TopPageContainer","useState","getKyugyos","a","axios","get","response","data","useEffect","history","require","createBrowserHistory","KyugyoPage","match","params","find","setKyugyo","isUpdating","setIsUpdating","setIsClosed","setStoreName","setAddress","access","setAccess","setHpUrl","misc","setMisc","undefined","createdAt","type","name","onClick","e","defaultChecked","onChange","target","value","defaultValue","updateKyugyos","put","then","res","preventDefault","delete","push","About","href","InputKyugyo","post","PostPageContainer","HeaderBar","App","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b85df12f.chunk.js","sourcesContent":["import * as React from 'react';\n// import { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { KyugyoType } from '../models/interfaces';\n\nconst KyugyoPost = (props) => {\n    const kyugyo: KyugyoType = props.kyugyo;\n    const link = `/kyugyo-front/kyugyos/${kyugyo.id}`;\n\n    return (\n        <Link to={link}>\n            <div className=\"flex-fill text-white kg-post-box\">\n                <div>店名：{kyugyo.storeName}</div>\n                <div>住所：{kyugyo.address}</div>\n                <div>店舗URL：{kyugyo.hpUrl}</div>\n                <div>更新日時：{kyugyo.updatedAt}</div>\n                <div className=\"border border-white text-white p-2 p-sm-3 rounded-pill text-nowrap my-3 my-sm-0 kg-kyugyo-button\">\n                    {kyugyo.isClosed ? '休業中' : '開業中'}\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default KyugyoPost;","import * as React from 'react';\n// import { useState, useEffect } from 'react';\nimport KyugyoPost from './KyugyoPost';\n// import { KyugyoType } from '../models/interfaces';\n// import { Route } from 'react-router-dom';\n// import KyugyoPage from './KyugyoPage';\n\nconst KyugyoList = (props) => {\n    const { kyugyos, setKyugyos } = props;\n\n    return (\n        <>\n            <ul className=\"list-unstyled px-sm-5\">\n                {kyugyos.map((k, i) => {\n                    return (\n                        // <KyugyoPost />\n                        <li className=\"h4 border border-white py-4 px-3 px-md-5\" key={k.id}>\n                            <KyugyoPost\n                                kyugyo={k}\n                            />\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n    );\n};\n\nexport default KyugyoList;","const localUrl = 'http://localhost:8000';\nconst prodUrl = 'https://kyugyo-back.herokuapp.com';\n// const tmpUrl = process.env.NODE_ENV === 'development' ? localUrl : prodUrl;\n\nconst apiUrl = `${localUrl}/api/kyugyos`;\n// const apiUrl = `${prodUrl}/api/kyugyos`;\nexport default apiUrl;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport KyugyoList from './KyugyoList';\nimport { Link } from 'react-router-dom';\nimport apiUrl from '../config';\nimport { KyugyoType } from '../models/interfaces';\n\nconst TopPageContainer = (props) => {\n    const [ kyugyos, setKyugyos ] = useState<KyugyoType[]>([]);\n\n    const getKyugyos = async () => {\n        const response = await axios.get(apiUrl);\n        setKyugyos(response.data);\n    };\n\n    useEffect(() => {\n        getKyugyos();\n    }, []);\n\n    return (\n        <>\n            <Link to='/kyugyo-front/post' className=\"btn btn-outline-light mb-3\">休業情報を投稿する</Link>\n            <KyugyoList\n                kyugyos={kyugyos}\n            />\n        </>\n    );\n}\n\nexport default TopPageContainer;","const history = require(\"history\").createBrowserHistory;\nexport default history();","import * as React from 'react';\n// import { useState, useEffect } from 'react';\nimport { KyugyoType } from '../models/interfaces';\nimport axios from 'axios';\nimport apiUrl from '../config';\nimport { useState } from 'react';\nimport InputKyugyo from './InputKyugyo';\nimport history from \"../history\";\n// import KyugyoContent from './KyugyoContent';\n\n\n// 休業POSTをクリックすると遷移する休業1店舗についての詳細ページ\nconst KyugyoPage = (props) => {\n    const [kyugyos, setKyugyos] = useState(props.kyugyos); // 親とリンクしてる\n    const id = props.match.params.id;\n    const [kyugyo, setKyugyo] = useState<KyugyoType>(kyugyos.find((kyugyo: KyugyoType) => id === kyugyo.id));\n    const [isUpdating, setIsUpdating] = useState<Boolean>(false);\n    // update用の変数\n    const [isClosed, setIsClosed] = useState(kyugyo?.isClosed);\n    const [storeName, setStoreName] = useState(kyugyo?.storeName);\n    const [address, setAddress] = useState(kyugyo?.address);\n    const [access, setAccess] = useState(kyugyo?.access);\n    const [hpUrl, setHpUrl] = useState(kyugyo?.hpUrl);\n    const [misc, setMisc] = useState(kyugyo?.misc);\n\n    const HandleDeleteKyugyo = (e) => {\n        if (kyugyo !== undefined) {\n            axios.delete(`${apiUrl}/${kyugyo.id}`, { data: kyugyo }).then((e) => {\n                history.push('/kyugyo-front');\n            })\n        }\n        e.preventDefault();\n    }\n\n    // 休業情報を更新し、更新し終わった状態にする\n    const HandleUpdateKyugyoAndSetUpdatedMode = (e) => {\n        const updateKyugyos = {\n            id: id,\n            storeName: storeName,\n            isClosed: isClosed,\n            misc: misc,\n            address: address,\n            access: access,\n            hpUrl: hpUrl\n        }\n        axios.put(`${apiUrl}/${id}`, updateKyugyos)\n        .then((res) => {\n            setIsUpdating(!isUpdating);\n            setKyugyo(res.data);\n            // setKyugyos(res.data);\n            \n            // 一旦トップへ飛ばすことにする            \n            // const url = `/kyugyo-front/kyugyo/${id}`;\n            // history.push(url);\n            // history.push('/kyugyo-front');\n        })\n        props.getKyugyos();\n        e.preventDefault();\n    }\n\n    /**\n     * この休業情報を編集するボタンが押された時にフォームへと変換するトリガー\n     */\n    const changeUpdateMode = () => {\n        setIsUpdating(!isUpdating);\n    }\n    return (\n        <>\n            <h2 className=\"text-white mb-4\">店舗情報</h2>\n            {(kyugyo !== undefined && !isUpdating) && (\n                <>\n                    <div className=\"flex-fill text-white kg-font-size ml-4\">\n                        <div className=\"kg-kyugyo-button text-center border border-white h3\n                                        text-white rounded-pill text-nowrap mx-auto p-2 p-sm-3 my-3 my-sm-5 w-25\">\n                            {kyugyo.isClosed ? '休業中' : '開業中'}\n                        </div>\n                        <div className=\"h3 border border-white mb-3 py-4 px-5\">店名：{kyugyo.storeName}</div>\n                        <div className=\"h3 border border-white mb-3 py-4 px-5\">住所：{kyugyo.address}</div>\n                        <div className=\"border border-white mb-3 py-4 px-5\">\n                            アクセス：{kyugyo.access}\n                        </div>\n                        <div className=\"border border-white mb-3 py-4 px-5\">\n                            <h3>店舗URL</h3>\n                            {kyugyo.hpUrl}\n                        </div>\n                        <div className=\"kg-misc-box border border-white mb-3 pt-4 pb-5 px-5\">\n                            <h3>備考</h3>\n                            {kyugyo.misc}\n                        </div>\n                        <div className=\"border border-white py-4 px-5\">\n                            <div>更新日時：{kyugyo.updatedAt}</div>\n                            <div>作成日時：{kyugyo.createdAt}</div>\n                        </div>\n                    </div>\n                </>\n            )}\n            {(kyugyo !== undefined && isUpdating) && (\n                <>\n                    <div className=\"flex-fill text-white kg-font-size ml-4\">\n                        <h2>休業情報の更新</h2>\n                        <form className=\"border border-white px-4 py-5 rounded form-group\">\n                            <div>\n                                <label className=\"text-white\">休業ステータス</label>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"isClosed\"\n                                    onClick={(e) => {setIsClosed(!isClosed)}}\n                                    defaultChecked\n                                />\n                            </div>\n                            <div className=\"p-4\">\n                                <label className=\"text-white\">店の名前</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"storeName\"\n                                    onChange={(e) => { setStoreName(e.target.value) }}\n                                    className='form-control'\n                                    defaultValue={storeName}\n                                />\n                            </div>\n                            <div className=\"p-4\">\n                                <label className=\"text-white\">住所</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"address\"\n                                    onChange={(e) => { setAddress(e.target.value) }}\n                                    className='form-control'\n                                    defaultValue={address}\n                                />\n                            </div>\n                            <div className=\"p-4\">\n                                <label className=\"text-white\">アクセス</label>\n                                <input \n                                    type=\"text\"\n                                    name=\"access\"\n                                    onChange={(e) => { setAccess(e.target.value) }}\n                                    className='form-control'\n                                    defaultValue={access}\n                                />\n                            </div>\n                            <div className=\"p-4\">\n                                <label className=\"text-white\">ホームページ等のURL</label>\n                                <input \n                                    type=\"text\"\n                                    name=\"hpUrl\"\n                                    onChange={(e) => { setHpUrl(e.target.value) }}\n                                    className='form-control'\n                                    defaultValue={hpUrl}\n                                />\n                            </div>\n                            <div className=\"p-4\">\n                                <label  className=\"text-white\">備考</label>\n                                <input \n                                    type=\"text\"\n                                    name=\"misc\"\n                                    onChange={(e) => { setMisc(e.target.value) }}\n                                    className='form-control'\n                                    defaultValue={misc}\n                                />\n                            </div>\n                        </form>\n                    </div>\n                </>\n            )}\n            {!isUpdating && (<div className=\"text-right\"><button onClick={changeUpdateMode} className=\"btn btn-outline-info mt-3\">この休業情報を編集する</button></div>)}\n            {isUpdating && (<div className=\"text-right\"><button onClick={HandleUpdateKyugyoAndSetUpdatedMode} className=\"btn btn-outline-primary mt-3\">この内容で編集完了する</button></div>)}\n            {/* TODO 本当に削除するか確認モーダル追加 */}\n            <div className=\"text-right\"><button onClick={HandleDeleteKyugyo} className=\"btn btn-outline-danger mt-3\">この休業情報を削除する</button></div>\n        </>\n    );\n}\n\nexport default KyugyoPage;","import * as React from 'react';\n\n// 休業POSTをクリックすると遷移する休業1店舗についての詳細ページ\nconst About = () => {\n    return (\n        <div>\n            <div className=\"text-white\">\n                <h1>休業.comについて</h1>\n                <p>\n                    休業.com(以下、当サイト)に訪問いただきありがとうございます。当サイトは開発中のため、また開発者が未熟なため様々な脆弱性及び不便さを多く抱えています。\n                    そのためデータ入力の場面においてはダミーデータのようなものを使用ください。仮に情報漏洩などが発生して際に生じた被害等に対する責任は置いかねます。\n                    ご了承ください。\n                </p>\n                <h2>現在開発中</h2>\n                <h3><a href='https://github.com/ryohek/kyugyo-front' className='text-white text-decoration-none'>フロントエンド</a></h3>\n                <h4>使用技術</h4>\n                <ul>\n                    <li>React</li>\n                    <li>TypeScript</li>\n                    <li>Bootstrap</li>\n                    <li>Scss</li>\n                    <li>GitHub Pages</li>\n                </ul>\n                <h3><a href='https://github.com/ryohek/kyugyo-back' className='text-white text-decoration-none'>サーバーサイド</a></h3>\n                <h4>使用技術</h4>\n                <ul>\n                    <li>Nest.js</li>\n                    <li>TypeScript</li>\n                    <li>MongoDB</li>\n                    <li>Mongoose</li>\n                    <li>Heroku</li>\n                </ul>\n                <h2>今後開発される機能リスト</h2>\n                TBD\n                <ul>\n                    <li>休業情報の編集機能</li>\n                    <li>ユーザー登録機能</li>\n                    <li>コメント機能</li>\n                    <li>コメントに対する返信機能</li>\n                    <li>削除ボタンの確認モーダル追加</li>\n                    <li>全体的なデザイン改修</li>\n                    <li>地域ごとのタグ追加</li>\n                    <li>休業期間入力機能</li>\n                    <li>休業情報に入れる情報の全体的な見直し</li>\n                    <li>投稿機能のモーダル化(やるかどうか不明)</li>\n                </ul>\n                <h2>お問い合わせ先</h2>\n                メールアドレス：rsklvあっとicloud.com<br />\n                あっと部分を@にしてください\n                <h2>サービスに関する改善、修正要望、不具合があったらissueにお願いします</h2>\n                <a href='https://github.com/ryohek/kyugyo-front/issues'>フロント側(画面上の不具合、4XX系のエラーが出た場合)はこちらから</a>\n                <a href='https://github.com/ryohek/kyugyo-back/issues'>サーバー側(5XX系のエラーが出た場合)はこちらから</a>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import * as React from 'react';\nimport axios from 'axios';\nimport apiUrl from '../config';\n// import { KyugyoType } from '../models/interfaces';\n// import KyugyoPage from './KyugyoPage';\nimport { useState } from 'react';\n// import { Redirect, Link } from 'react-router-dom';\nimport history from \"../history\";\n\n// input formを設置\nconst InputKyugyo = () => {\n    const [storeName, setStoreName] = useState('');\n    const [address, setAddress] = useState('');\n    const [access, setAccess] = useState('');\n    const [hpUrl, setHpUrl] = useState('');\n    const [misc, setMisc] = useState('');\n\n    // storeName address access hpUrl misc が入力され、postボタンが押されて発火したら実行する\n    // state の変化を受け、apiを叩くメソッド\n    const handleSubmit = (e) => {\n        const kyugyos = {\n            storeName: storeName,\n            misc: misc,\n            address: address,\n            access: access,\n            hpUrl: hpUrl\n        }\n        axios.post(apiUrl, kyugyos).then((e) => {\n            history.push('/kyugyo-front');\n        })\n        e.preventDefault();\n    }\n\n    // TODO 後で共通化\n    return (\n        <div className=\"pb-5\">\n            <div className=\"text-white h3 mb-4\">休業情報の入力</div>\n            <form className=\"border border-white px-4 py-5 rounded form-group\">\n                <div className=\"p-4\">\n                    <label className=\"text-white\">店の名前</label>\n                    <input\n                        type=\"text\"\n                        name=\"storeName\"\n                        onChange={(e) => { setStoreName(e.target.value) }}\n                        className='form-control'\n                    />\n                </div>\n                <div className=\"p-4\">\n                    <label className=\"text-white\">住所</label>\n                    <input\n                      type=\"text\"\n                      name=\"address\"\n                      onChange={(e) => { setAddress(e.target.value) }}\n                      className='form-control'\n                    />\n                </div>\n                <div className=\"p-4\">\n                    <label className=\"text-white\">アクセス</label>\n                    <input \n                      type=\"text\"\n                      name=\"access\"\n                      onChange={(e) => { setAccess(e.target.value) }}\n                      className='form-control'\n                    />\n                </div>\n                <div className=\"p-4\">\n                    <label className=\"text-white\">ホームページ等のURL</label>\n                    <input \n                      type=\"text\"\n                      name=\"hpUrl\"\n                      onChange={(e) => { setHpUrl(e.target.value) }}\n                      className='form-control'\n                    />\n                </div>\n                <div className=\"p-4\">\n                    <label  className=\"text-white\">備考</label>\n                    <input \n                      type=\"text\"\n                      name=\"misc\"\n                      onChange={(e) => { setMisc(e.target.value) }}\n                      className='form-control'\n                    />\n                </div>\n                <div className=\"text-center\">\n                    <button onClick={handleSubmit} className=\"btn btn-outline-light\">投稿する</button>\n                </div>\n            </form>\n        </div>        \n    )\n}\n\nexport default InputKyugyo;","import * as React from 'react';\n// import { Link } from 'react-router-dom';\nimport InputKyugyo from './InputKyugyo';\n\nconst PostPageContainer = () => {\n    return (\n        <>\n            <InputKyugyo />\n        </>\n    );\n}\n\nexport default PostPageContainer","import * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderBar = () => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg px-3 px-5 kyg-navbar shadow justify-content-between\">\n            <Link to='/kyugyo-front' className=\"h2 my-3 text-white text-decoration-none\">休業.com</Link>\n            <div className=\"text-right text-white\">休業中の店の情報共有サイト</div>\n        </nav>        \n    )\n}\n\nexport default HeaderBar;","import React from 'react';\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { KyugyoType } from './models/interfaces';\nimport './App.scss';\nimport { Route, Router, Switch, Link } from 'react-router-dom';\nimport TopPageContainer from './components/TopPageContainer';\nimport KyugyoPage from './components/KyugyoPage';\nimport About from './components/About';\nimport apiUrl from \"./config\";\nimport PostPageContainer from './components/PostPageContainer';\nimport history from \"./history\";\nimport HeaderBar from './components/HeaderBar';\n\nconst App = () => {\n  const [kyugyos, setKyugyos] = useState<KyugyoType[]>([]);\n\n  const getKyugyos = async () => {\n    const response = await axios.get(apiUrl);\n    setKyugyos(response.data);\n  };\n\n  useEffect(() => {\n    getKyugyos();\n  }, []);\n\n  return (\n    <div className=\"bg-dark pb-5\">\n      <Router history={history}>\n        <HeaderBar />\n        <div className=\"w-100 mx-auto my-4 px-sm-5\">\n          <Switch>\n            <Route exact path='/kyugyo-front' render={() => <TopPageContainer kyugyos={kyugyos} />} />\n            <Route exact path='/kyugyo-front/about' render={() => <About />} />\n            <Route exact path='/kyugyo-front/post' render={() => <PostPageContainer />} />\n            <Route exact path='/kyugyo-front/kyugyos/:id' render={({match}) => <KyugyoPage kyugyos={kyugyos} match={match} getKyugyos={getKyugyos}/>} />\n          </Switch>\n          <div className=\"text-center mt-5 pt-5\">\n            <Link to='/kyugyo-front/about' className=\"text-white\">休業.comについて</Link>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}